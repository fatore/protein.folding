/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StressParamView.java
 *
 * Created on 08/07/2009, 21:28:49
 */
package projection.stress;

import distance.dissimilarity.DissimilarityFactory.DissimilarityType;
import java.io.IOException;
import projection.stress.StressFactory.StressType;
import vispipelinebasics.interfaces.AbstractParametersView;

/**
 *
 * @author Fernando Vieira Paulovich
 */
public class StressParamView extends AbstractParametersView {

    /** Creates new form StressParamView */
    public StressParamView(StressComp comp) {
        initComponents();

        this.comp = comp;

        for (DissimilarityType disstype : DissimilarityType.values()) {
            this.dissimilarityComboBox.addItem(disstype);
        }

        for (StressType stresstype : StressType.values()) {
            this.stressComboBox.addItem(stresstype);
        }

        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dissimilarityPanel = new javax.swing.JPanel();
        dissimilarityComboBox = new javax.swing.JComboBox();
        stressPanel = new javax.swing.JPanel();
        stressComboBox = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Stress Parameters"));
        setLayout(new java.awt.GridBagLayout());

        dissimilarityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dissimilarity"));
        dissimilarityPanel.setLayout(new java.awt.BorderLayout());
        dissimilarityPanel.add(dissimilarityComboBox, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(dissimilarityPanel, gridBagConstraints);

        stressPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Stress Technique"));
        stressPanel.setLayout(new java.awt.BorderLayout());
        stressPanel.add(stressComboBox, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(stressPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void reset() {
        if (comp.isDistanceMatrixProvided()) {
            dissimilarityComboBox.setEnabled(false);
        } else {
            dissimilarityComboBox.setEnabled(true);
            dissimilarityComboBox.setSelectedItem(comp.getDissimilarityType());
        }

        stressComboBox.setSelectedItem(comp.getStressType());
    }

    @Override
    public void finished() throws IOException {
        if (!comp.isDistanceMatrixProvided()) {
            comp.setDissimilarityType((DissimilarityType) dissimilarityComboBox.getSelectedItem());
        }

        comp.setStressType((StressType) stressComboBox.getSelectedItem());
    }

    private StressComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dissimilarityComboBox;
    private javax.swing.JPanel dissimilarityPanel;
    private javax.swing.JComboBox stressComboBox;
    private javax.swing.JPanel stressPanel;
    // End of variables declaration//GEN-END:variables
}
