/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ZipCorpusParamView.java
 *
 * Created on 27/05/2009, 09:41:46
 */
package textprocessing.corpus.zip;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import textprocessing.util.TextProcessingConstants;
import textprocessing.util.filter.ZIPFilter;
import vispipelinebasics.interfaces.AbstractParametersView;
import visualizationbasics.util.OpenDialog;
import visualizationbasics.util.PropertiesManager;

/**
 *
 * @author Fernando Vieira Paulovich
 */
public class ZipCorpusParamView extends AbstractParametersView {

    /** Creates new form ZipCorpusParamView */
    public ZipCorpusParamView(ZipCorpusComp comp) {
        initComponents();
        this.comp = comp;

        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        corpusTextField = new javax.swing.JTextField();
        corpusButton = new javax.swing.JButton();
        corpusLabel = new javax.swing.JLabel();
        gramsLabel = new javax.swing.JLabel();
        gramsComboBox = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Zip Corpus"));
        setLayout(new java.awt.GridBagLayout());

        corpusTextField.setColumns(35);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(corpusTextField, gridBagConstraints);

        corpusButton.setText("Search...");
        corpusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                corpusButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(corpusButton, gridBagConstraints);

        corpusLabel.setText("File name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(corpusLabel, gridBagConstraints);

        gramsLabel.setText("Number of grams");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(gramsLabel, gridBagConstraints);

        gramsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(gramsComboBox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void corpusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corpusButtonActionPerformed
        try {
            PropertiesManager spm = PropertiesManager.getInstance(TextProcessingConstants.PROPFILENAME);
            int result = OpenDialog.showOpenDialog(spm, new ZIPFilter(), this);
            if (result == JFileChooser.APPROVE_OPTION) {
                String filename = OpenDialog.getFilename();
                corpusTextField.setText(filename);
            }
        } catch (IOException ex) {
            Logger.getLogger(ZipCorpusParamView.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_corpusButtonActionPerformed

    @Override
    public void reset() {
        corpusTextField.setText(comp.getUrl());
        gramsComboBox.setSelectedIndex(comp.getNumberGrams() - 1);
    }

    @Override
    public void finished() throws IOException {
        if (corpusTextField.getText().trim().length() > 0) {
            comp.setUrl(corpusTextField.getText());
        } else {
            throw new IOException("A corpus file name must be provided.");
        }

        comp.setNumberGrams(gramsComboBox.getSelectedIndex() + 1);
    }

    private ZipCorpusComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton corpusButton;
    private javax.swing.JLabel corpusLabel;
    private javax.swing.JTextField corpusTextField;
    private javax.swing.JComboBox gramsComboBox;
    private javax.swing.JLabel gramsLabel;
    // End of variables declaration//GEN-END:variables
}
