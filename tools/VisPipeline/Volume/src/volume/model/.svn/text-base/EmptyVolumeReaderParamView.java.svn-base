/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BMPVolumeReaderParamView.java
 *
 * Created on 10/08/2009, 16:21:29
 */
package volume.model;

import java.io.IOException;
import vispipelinebasics.interfaces.AbstractParametersView;

/**
 *
 * @author Danilo Medeiros Eler
 */
public class EmptyVolumeReaderParamView extends AbstractParametersView {

    /** Creates new form BMPVolumeReaderParamView */
    public EmptyVolumeReaderParamView(EmptyVolumeReaderComp comp) {
        initComponents();

        this.comp = comp;
        reset();
    }

    @Override
    public void reset() {
        X_Text.setText(Integer.toString(comp.getX()));
        Y_Text.setText(Integer.toString(comp.getY()));
        Z_Text.setText(Integer.toString(comp.getZ()));

        width_Text.setText(Integer.toString(comp.getWidth()));
        height_Text.setText(Integer.toString(comp.getHeight()));
        depth_Text.setText(Integer.toString(comp.getDepth()));
    }

    @Override
    public void finished() throws IOException {
        if (X_Text.getText().trim().length() > 0
                && Y_Text.getText().trim().length() > 0
                && Z_Text.getText().trim().length() > 0) {
            comp.setX(Integer.parseInt(X_Text.getText()));
            comp.setY(Integer.parseInt(Y_Text.getText()));
            comp.setZ(Integer.parseInt(Z_Text.getText()));
        } else {
            throw new IOException("A voxel spacing must be provided.");
        }

        if (width_Text.getText().trim().length() > 0
                && depth_Text.getText().trim().length() > 0
                && height_Text.getText().trim().length() > 0) {
            comp.setWidth(Integer.parseInt(width_Text.getText()));
            comp.setDepth(Integer.parseInt(depth_Text.getText()));
            comp.setHeight(Integer.parseInt(height_Text.getText()));
        } else {
            throw new IOException("A volume dimension must be provided.");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        spacingLabel = new javax.swing.JLabel();
        X_Text = new javax.swing.JTextField();
        Y_Text = new javax.swing.JTextField();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        zLabel = new javax.swing.JLabel();
        Z_Text = new javax.swing.JTextField();
        sizeLabel = new javax.swing.JLabel();
        width_Text = new javax.swing.JTextField();
        widthLabel = new javax.swing.JLabel();
        heightLabel = new javax.swing.JLabel();
        height_Text = new javax.swing.JTextField();
        depthLabel = new javax.swing.JLabel();
        depth_Text = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Volume Information"));
        setLayout(new java.awt.GridBagLayout());

        spacingLabel.setText("Voxel Spacing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(spacingLabel, gridBagConstraints);

        X_Text.setColumns(2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(X_Text, gridBagConstraints);

        Y_Text.setColumns(2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(Y_Text, gridBagConstraints);

        xLabel.setText("X");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(xLabel, gridBagConstraints);

        yLabel.setText("Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(yLabel, gridBagConstraints);

        zLabel.setText("Z");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(zLabel, gridBagConstraints);

        Z_Text.setColumns(2);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(Z_Text, gridBagConstraints);

        sizeLabel.setText("Volume Size");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(18, 3, 3, 3);
        add(sizeLabel, gridBagConstraints);

        width_Text.setColumns(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(width_Text, gridBagConstraints);

        widthLabel.setText("width");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(18, 3, 3, 3);
        add(widthLabel, gridBagConstraints);

        heightLabel.setText("height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(18, 3, 3, 3);
        add(heightLabel, gridBagConstraints);

        height_Text.setColumns(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(height_Text, gridBagConstraints);

        depthLabel.setText("depth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(18, 3, 3, 3);
        add(depthLabel, gridBagConstraints);

        depth_Text.setColumns(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(depth_Text, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private EmptyVolumeReaderComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField X_Text;
    private javax.swing.JTextField Y_Text;
    private javax.swing.JTextField Z_Text;
    private javax.swing.JLabel depthLabel;
    private javax.swing.JTextField depth_Text;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JTextField height_Text;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JLabel spacingLabel;
    private javax.swing.JLabel widthLabel;
    private javax.swing.JTextField width_Text;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yLabel;
    private javax.swing.JLabel zLabel;
    // End of variables declaration//GEN-END:variables
}
