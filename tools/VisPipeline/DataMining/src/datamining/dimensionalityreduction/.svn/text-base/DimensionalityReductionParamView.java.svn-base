/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DimensionalityReductionParamView.java
 *
 * Created on 20/06/2009, 10:55:38
 */
package datamining.dimensionalityreduction;

import datamining.dimensionalityreduction.DimensionalityReductionFactory.DimensionalityReductionType;
import distance.dissimilarity.DissimilarityFactory.DissimilarityType;
import java.io.IOException;
import vispipelinebasics.interfaces.AbstractParametersView;

/**
 *
 * @author Fernando Vieira Paulovich
 */
public class DimensionalityReductionParamView extends AbstractParametersView {

    /** Creates new form DimensionalityReductionParamView */
    public DimensionalityReductionParamView(DimensionalityReductionComp comp) {
        initComponents();

        this.comp = comp;

        for (DissimilarityType disstype : DissimilarityType.values()) {
            this.dissimilarityComboBox.addItem(disstype);
        }

        for (DimensionalityReductionType redtype : DimensionalityReductionType.values()) {
            this.reductionComboBox.addItem(redtype);
        }

        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dissimilarityPanel = new javax.swing.JPanel();
        dissimilarityComboBox = new javax.swing.JComboBox();
        dimensionsPanel = new javax.swing.JPanel();
        dimensionsLabel = new javax.swing.JLabel();
        dimensionsTextField = new javax.swing.JTextField();
        reductionPanel = new javax.swing.JPanel();
        reductionComboBox = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Dimensionality Reduction Parameters"));
        setLayout(new java.awt.GridBagLayout());

        dissimilarityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dissimilarity"));
        dissimilarityPanel.setLayout(new java.awt.BorderLayout());
        dissimilarityPanel.add(dissimilarityComboBox, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(dissimilarityPanel, gridBagConstraints);

        dimensionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dimensions"));
        dimensionsPanel.setLayout(new java.awt.GridBagLayout());

        dimensionsLabel.setText("Number of dimensions");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        dimensionsPanel.add(dimensionsLabel, gridBagConstraints);

        dimensionsTextField.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        dimensionsPanel.add(dimensionsTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(dimensionsPanel, gridBagConstraints);

        reductionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Reduction Technique"));
        reductionPanel.setLayout(new java.awt.BorderLayout());
        reductionPanel.add(reductionComboBox, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(reductionPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void reset() {
        dissimilarityComboBox.setSelectedItem(comp.getDissimilarityType());
        reductionComboBox.setSelectedItem(comp.getDimensionalityReductionType());
    }

    @Override
    public void finished() throws IOException {
        if (dimensionsTextField.getText().trim().length() > 0) {
            int nrdim = Integer.parseInt(dimensionsTextField.getText());
            if (nrdim > 0) {
                if (comp.numberOriginalDimensions() > nrdim) {
                    comp.setNumberDimensions(nrdim);
                } else {
                    throw new IOException("The target dimensionality should be smaller than " +
                            "the original dimensionality.");
                }
            } else {
                throw new IOException("The target dimensionality should be positive.");
            }
        } else {
            throw new IOException("The target dimensionality should be provided.");
        }

        comp.setDimensionalityReductionType((DimensionalityReductionType) reductionComboBox.getSelectedItem());
        comp.setDissimilarityType((DissimilarityType) dissimilarityComboBox.getSelectedItem());
    }

    private DimensionalityReductionComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dimensionsLabel;
    private javax.swing.JPanel dimensionsPanel;
    private javax.swing.JTextField dimensionsTextField;
    private javax.swing.JComboBox dissimilarityComboBox;
    private javax.swing.JPanel dissimilarityPanel;
    private javax.swing.JComboBox reductionComboBox;
    private javax.swing.JPanel reductionPanel;
    // End of variables declaration//GEN-END:variables
}
