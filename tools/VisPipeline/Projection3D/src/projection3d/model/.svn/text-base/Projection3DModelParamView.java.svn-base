/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * XMLModelReaderParamView.java
 *
 * Created on 02/08/2009, 16:29:28
 */
package projection3d.model;

import projection.view.*;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import projection3d.model.Projection3DModel.TypeGlyph;
import vispipelinebasics.interfaces.AbstractParametersView;

/**
 *
 * @author jpocom
 */
public class Projection3DModelParamView extends AbstractParametersView {

    /** Creates new form XMLModelReaderParamView */
    public Projection3DModelParamView(Projection3DModelComp comp) {
        this.typeComboModel = new DefaultComboBoxModel();
        initComponents();

        this.comp = comp;
        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        typeLabel = new javax.swing.JLabel();
        typeCombo = new JExtendedComboBox(this.typeComboModel);

        setBorder(javax.swing.BorderFactory.createTitledBorder("XML Projection Model Reader"));
        setLayout(new java.awt.GridBagLayout());

        typeLabel.setText("Instance Representation:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(typeLabel, gridBagConstraints);

        add(typeCombo, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void reset() {
        typeComboModel.removeAllElements();

        for (TypeGlyph val: TypeGlyph.values()) {
            typeCombo.addItem(val);
        }

        typeCombo.setSelectedItem(comp.getTypeGlyph());
    }

    @Override
    public void finished() throws IOException {
        comp.setTypeGlyph((TypeGlyph)typeComboModel.getSelectedItem());
    }

    private Projection3DModelComp comp;
    private DefaultComboBoxModel typeComboModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox typeCombo;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
