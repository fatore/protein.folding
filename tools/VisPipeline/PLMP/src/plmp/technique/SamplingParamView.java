/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RandomSamplingParamView.java
 *
 * Created on Feb 5, 2010, 2:55:56 PM
 */
package plmp.technique;

import distance.dissimilarity.DissimilarityFactory.DissimilarityType;
import java.io.IOException;
import plmp.technique.Sampling.SampleType;
import vispipelinebasics.interfaces.AbstractParametersView;

/**
 *
 * @author paulovich
 */
public class SamplingParamView extends AbstractParametersView {

    /** Creates new form RandomSamplingParamView */
    public SamplingParamView(SamplingComp comp) {
        initComponents();
        this.comp = comp;

        for (DissimilarityType disstype : DissimilarityType.values()) {
            this.dissimilarityComboBox.addItem(disstype);
        }

        for (SampleType stype : SampleType.values()) {
            this.sampleComboBox.addItem(stype);
        }

        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        improvementPanel = new javax.swing.JPanel();
        nSamplesLabel = new javax.swing.JLabel();
        nSamplesTextField = new javax.swing.JTextField();
        dissimilarityPanel = new javax.swing.JPanel();
        dissimilarityComboBox = new javax.swing.JComboBox();
        samplePanel = new javax.swing.JPanel();
        sampleComboBox = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        improvementPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Random Sampling"));
        improvementPanel.setLayout(new java.awt.GridBagLayout());

        nSamplesLabel.setText("Number of samples");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        improvementPanel.add(nSamplesLabel, gridBagConstraints);

        nSamplesTextField.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        improvementPanel.add(nSamplesTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(improvementPanel, gridBagConstraints);

        dissimilarityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dissimilarity"));
        dissimilarityPanel.setLayout(new java.awt.BorderLayout());
        dissimilarityPanel.add(dissimilarityComboBox, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(dissimilarityPanel, gridBagConstraints);

        samplePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sample"));
        samplePanel.setLayout(new java.awt.BorderLayout());
        samplePanel.add(sampleComboBox, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(samplePanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void reset() {
        nSamplesTextField.setText(Integer.toString(comp.getSampleSize()));
        dissimilarityComboBox.setSelectedItem(comp.getDissimilarityType());
        sampleComboBox.setSelectedItem(comp.getSampleType());
    }

    @Override
    public void finished() throws IOException {
        if (nSamplesTextField.getText().trim().length() > 0) {
            int ssize = Integer.parseInt(nSamplesTextField.getText());
            if (ssize > 0) {
                comp.setSampleSize(ssize);
            } else {
                throw new IOException("The sample size should be positive.");
            }
        } else {
            throw new IOException("The sample size should be provided.");
        }

        comp.setDissimilarityType((DissimilarityType) dissimilarityComboBox.getSelectedItem());
        comp.setSampleType((SampleType) sampleComboBox.getSelectedItem());
    }
    
    private SamplingComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dissimilarityComboBox;
    private javax.swing.JPanel dissimilarityPanel;
    private javax.swing.JPanel improvementPanel;
    private javax.swing.JLabel nSamplesLabel;
    private javax.swing.JTextField nSamplesTextField;
    private javax.swing.JComboBox sampleComboBox;
    private javax.swing.JPanel samplePanel;
    // End of variables declaration//GEN-END:variables
}
