/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TRKFiberReaderParamView.java
 *
 * Created on Oct 26, 2009, 9:22:36 PM
 */

package tensor.model;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import tensor.util.TensorConstants;
import tensor.util.filter.TRKFilter;
import vispipelinebasics.interfaces.AbstractParametersView;
import visualizationbasics.util.OpenDialog;
import visualizationbasics.util.PropertiesManager;

/**
 *
 * @author jpocom
 */
public class TRKFiberReaderParamView extends AbstractParametersView {

    /** Creates new form TRKFiberReaderParamView */
    public TRKFiberReaderParamView(TRKFiberReaderComp comp) {
        initComponents();

        this.comp = comp;
        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        filenameTextField = new javax.swing.JTextField();
        searchButtom = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 333;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(filenameTextField, gridBagConstraints);

        searchButtom.setText("Search...");
        searchButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtomActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(searchButtom, gridBagConstraints);

        jLabel1.setText("Fiber file (*.tkr) :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtomActionPerformed
        try {
            PropertiesManager spm = PropertiesManager.getInstance(TensorConstants.PROPFILENAME);
            int result = OpenDialog.showOpenDialog(spm, new TRKFilter(), this);

            if (result == JFileChooser.APPROVE_OPTION) {
                String filename = OpenDialog.getFilename();
                filenameTextField.setText(filename);
            }
        } catch (IOException ex) {
            Logger.getLogger(TRKFiberReaderParamView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtomActionPerformed

    @Override
    public void finished() throws IOException {
        if (filenameTextField.getText().trim().length() > 0) {
            comp.setFilename(filenameTextField.getText());
        } else {
            throw new IOException("A trk file name must be provided.");
        }
    }

    @Override
    public void reset() {
        filenameTextField.setText(comp.getFilename());
    }

    private TRKFiberReaderComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filenameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton searchButtom;
    // End of variables declaration//GEN-END:variables

}
