/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FiberSamplingParamView.java
 *
 * Created on Nov 4, 2009, 3:07:17 AM
 */

package tensor.model;

import java.io.IOException;
import vispipelinebasics.interfaces.AbstractParametersView;

/**
 *
 * @author jpocom
 */
public class FiberCurvatureParamView extends AbstractParametersView {

    /** Creates new form FiberSamplingParamView */
    public FiberCurvatureParamView(FiberCurvatureComp comp) {
        initComponents();
        this.comp = comp;
        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        minSlider = new javax.swing.JSlider();
        maxSlider = new javax.swing.JSlider();
        label = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Coeficients Range"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        minSlider.setMajorTickSpacing(5);
        minSlider.setMaximum(15);
        minSlider.setMinorTickSpacing(1);
        minSlider.setPaintLabels(true);
        minSlider.setPaintTicks(true);
        minSlider.setValue(5);
        minSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minSliderStateChanged(evt);
            }
        });
        jPanel1.add(minSlider, new java.awt.GridBagConstraints());

        maxSlider.setMajorTickSpacing(5);
        maxSlider.setMaximum(15);
        maxSlider.setMinorTickSpacing(1);
        maxSlider.setPaintLabels(true);
        maxSlider.setPaintTicks(true);
        maxSlider.setValue(5);
        maxSlider.setInverted(true);
        maxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxSliderStateChanged(evt);
            }
        });
        jPanel1.add(maxSlider, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(label, gridBagConstraints);

        add(jPanel1, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void minSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minSliderStateChanged
        changeLabel();
    }//GEN-LAST:event_minSliderStateChanged

    private void maxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxSliderStateChanged
        changeLabel();
    }//GEN-LAST:event_maxSliderStateChanged

    private void changeLabel() {
        int min = minSlider.getValue();
        int max = maxSlider.getValue();

        label.setText("Features composed of: 3 x ( "+min+" min freq + " +max+" max freq )");
    }

    @Override
    public void finished() throws IOException {
        comp.setMin(minSlider.getValue());
        comp.setMax(maxSlider.getValue());
    }

    @Override
    public void reset() {
        this.minSlider.setValue(comp.getMin());
        this.maxSlider.setValue(comp.getMax());
        changeLabel();
    }

    private FiberCurvatureComp comp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label;
    private javax.swing.JSlider maxSlider;
    private javax.swing.JSlider minSlider;
    // End of variables declaration//GEN-END:variables

}
